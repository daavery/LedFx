name: CI Build LedFx

on:
  push:
  pull_request:

jobs:
  build-ledfx-linux:
    name: Build LedFx (Ubuntu)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: ["3.8","3.9","3.10"]
    steps:
      - name: Check out code from GitHub
        uses: actions/checkout@v2
      - name: Install build dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y \
          gcc libatlas3-base portaudio19-dev
      - name: Setup Python ${{ matrix.python }}
        id: python
        uses: actions/setup-python@v2.2.1
        with:
          python-version: ${{ matrix.python }}
      - name: Build a binary wheel
        run: |
          python -m pip install --user -U pip wheel setuptools
          python setup.py -q sdist bdist_wheel
      - name: Upload Artifacts
        uses: kittaakos/upload-artifact-as-is@v0
        with:
            path: dist/

  build-ledfx-windows:
    name: Build LedFx (Windows)
    runs-on: windows-latest
    strategy:
      matrix:
        python: ["3.8","3.9","3.10"]
    steps:
      - name: Check out code from GitHub
        uses: actions/checkout@v2
      - name: Setup Python ${{ matrix.python }}
        id: python
        uses: actions/setup-python@v2.2.1
        with:
          python-version: ${{ matrix.python }}
      - name: Build a binary wheel
        run: |
          python -m pip install --user -U pip wheel setuptools
          python setup.py bdist_wheel
      - name: Upload Artifacts
        uses: kittaakos/upload-artifact-as-is@v0
        with:
            path: dist/
  build-ledfx-osx:
    name: Build LedFx (OS X)
    runs-on: macos-latest
    strategy:
      matrix:
        python: ["3.8","3.9","3.10"]
    steps:
      - name: Check out code from GitHub
        uses: actions/checkout@v2
      - name: Install build dependencies
        run: |
          brew install portaudio
      - name: Setup Python ${{ matrix.python }}
        id: python
        uses: actions/setup-python@v2.2.1
        with:
          python-version: ${{ matrix.python }}
      - name: Build a binary wheel
        run: |
          python -m pip install numpy --compile --pre
          python -m pip install --user -U pip wheel setuptools
          python setup.py bdist_wheel
      - name: Upload Artifacts
        uses: kittaakos/upload-artifact-as-is@v0
        with:
            path: dist/
  build-ledfx-frontend:
    name: Build LedFx Frontend
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [10, 12, 14]
    steps:
      - name: Check out code from GitHub
        uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install yarn
        run: |
          npm install -g yarn
      - name: Run yarn install and build
        run: |
          cd frontend
          yarn
          yarn build
        env:
          CI: true
  upload-test-wheels:
    needs: [build-ledfx-linux, build-ledfx-windows, build-ledfx-osx]
    name: Upload LedFx Wheels
    runs-on: ubuntu-latest
    steps:
      - name: Check out code from GitHub
        uses: actions/checkout@v2
      - name: Gets Artifacts
        uses: actions/download-artifact@v2
        path: dist/
      - name: Publish distribution ðŸ“¦ to Test PyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          password: ${{ secrets.SHAUNS_TESTPYPI_API_KEY }}
          repository_url: https://test.pypi.org/legacy/
      - name: Publish distribution ðŸ“¦ to PyPI
        if: startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@master
        with:
          password: ${{ secrets.SHAUNS_TESTPYPI_API_KEY }}